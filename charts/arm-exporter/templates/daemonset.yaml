apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "arm-exporter.fullname" . }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "arm-exporter.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      name: "{{ .Release.Name }}"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        name: "{{ .Release.Name }}"
        {{- include "arm-exporter.selectorLabels" . | nindent 8 }}
    spec:
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /etc/machine-id
              name: machine-id
              readOnly: true
      volumes:
        - name: machine-id
          hostPath:
            path: /etc/machine-id
            type: File
      terminationGracePeriodSeconds: 10
