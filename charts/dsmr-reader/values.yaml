defaultPodOptions:
  nodeSelector:
    kubernetes.io/hostname: node7
  tolerations:
    - key: "node.kubernetes.io/unschedulable"
      operator: "Exists"
      effect: "NoSchedule"
    - key: node-role.kubernetes.io/control-plane
      operator: "Exists"
      effect: "NoSchedule"
controllers:
  main:
    type: statefulset
    containers:
      main:
        image:
          repository: ghcr.io/xirixiz/dsmr-reader-docker
          pullPolicy: IfNotPresent
          tag: 5.10.4-2023.11.01
        env:
          # TZ: Europe/Amsterdam
          VIRTUAL_HOST: localhost
          DISABLE_NGINX_ACCESS_LOGS: true
          ENABLE_HTTP_AUTH: false
          DJANGO_DATABASE_ENGINE: django.db.backends.postgresql
          DJANGO_DATABASE_NAME: dsmr-reader
          DJANGO_DATABASE_HOST: postgresql-rw.cloudnative-pg
          DJANGO_DATABASE_USER: dsmr-reader
          DJANGO_DATABASE_PASSWORD: dsmr-reader-password
          DJANGO_DATABASE_PORT: 5432
          DSMRREADER_ADMIN_USER: root
          DSMRREADER_ADMIN_PASSWORD: killer
          PGSSLCERT: /tmp/postgresql.crt
        resources:
          limits:
            squat.ai/p1port: 1
service:
  main:
    ports:
      http:
        port: 80

ingress:
  main:
    enabled: true
    annotations:
      external-dns.alpha.kubernetes.io/target: ingress.impl.nl
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
      cert-manager.io/cluster-issuer: letsencrypt-production
    ingressClassName: nginx
    className: nginx
    hosts:
      - host: dsmr-reader.impl.nl
        paths:
          - path: /
            pathType: Prefix
            service:
              name: main
              port: http
    tls:
      - secretName: dsmr-reader.impl.nl
        hosts:
          - dsmr-reader.impl.nl
