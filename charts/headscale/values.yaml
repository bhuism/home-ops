defaultPodOptions:
  shareProcessNamespace: true

controllers:
  main:
    initContainers:
      create-etc-headplane:
        image:
          pullPolicy: IfNotPresent
          repository: alpine
          tag: 3.21.3
        command:
          - sh
          - -c
          - |
            echo 'Writing headplane config' >&2              
            mkdir -p "/etc/headplane"
            cat <<- 'EOF' >"/etc/headplane/config.yaml"

            server:
                host: "0.0.0.0"
                port: 3000

                # The secret used to encode and decode web sessions
                # Ensure that this is exactly 32 characters long
                cookie_secret: "<change_me_to_something_secure!>"
                cookie_secure: false

            headscale:
                url: "http://localhost:8080"
                public_url: "https://headscale.impl.nl"
                config_path: "/etc/headscale/config.yaml"
                config_strict: true

            integration:
                docker:
                    enabled: false
                    container_name: "headscale"
                kubernetes:
                    enabled: true
                    validate_manifest: true
                    # This should be the name of the Pod running Headscale and Headplane.
                    # If this isn't static you should be using the Kubernetes Downward API
                    # to set this value (refer to docs/Integrated-Mode.md for more info).
                    pod_name: "headplane"

                proc:
                    enabled: false
            EOF

      create-etc-headscale:
        image:
          pullPolicy: IfNotPresent
          repository: alpine
          tag: 3.21.3
        command:
          - sh
          - -c
          - |
            echo 'Writing headscale config' >&2              
            mkdir -p "/etc/headscale"
            cat <<- 'EOF' >"/etc/headscale/config.yaml"

            server_url: https://headscale.impl.nl
            listen_addr: 0.0.0.0:8080
            metrics_listen_addr: 0.0.0.0:9090
            grpc_listen_addr: 0.0.0.0:50443
            grpc_allow_insecure: false

            private_key_path: /etc/headscale/private.key

            noise:
              private_key_path: /etc/headscale/noise_private.key
            prefixes:
              v4: 100.64.0.0/10
              allocation: sequential

            derp:
              server:
                enabled: false
              urls:
                - https://controlplane.tailscale.com/derpmap/default
              auto_update_enabled: true
              update_frequency: 24h

            disable_check_updates: true

            # Time before an inactive ephemeral node is deleted?
            ephemeral_node_inactivity_timeout: 30m

            database:
              type: sqlite
              sqlite:
                path: /etc/headscale/db.sqlite

            log:
              # Output formatting for logs: text or json
              format: text
              level: info

            dns:
              magic_dns: false

            EOF

    containers:
      main:
        image:
          pullPolicy: IfNotPresent
          repository: ghcr.io/juanfont/headscale
          tag: v0.25.1
        probes:
          liveness:
            enabled: true
            type: TCP
            port: 8080
          readiness:
            enabled: true
            type: TCP
            port: 8080
          startup:
            enabled: true
            type: TCP
            port: 8080
        env:
          TZ: "UTC"
        args: ["serve"]
      headplane:
        image:
          pullPolicy: IfNotPresent
          repository: ghcr.io/tale/headplane
          tag: 0.5.5
        probes:
          liveness:
            enabled: true
            type: TCP
            port: 3000
          readiness:
            enabled: true
            type: TCP
            port: 3000
          startup:
            enabled: true
            type: TCP
            port: 3000
        env:
          # Set these if the pod name for Headscale is not static
          # We will use the downward API to get the pod name instead
          HEADPLANE_LOAD_ENV_OVERRIDES: "true"
          HEADPLANE_INTEGRATION__KUBERNETES__POD_NAME:
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
service:
  main:
    controller: main
    ports:
      http:
        port: 8080
      metrics:
        port: 9090
      headplane:
        port: 3000
      grpc:
        port: 50443

ingress:
  main:
    enabled: true
    className: nginx-external
    annotations:
      external-dns.alpha.kubernetes.io/target: jasmine.odee.net
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
      cert-manager.io/cluster-issuer: letsencrypt-production
    hosts:
      - host: headscale.impl.nl
        paths:
          - path: /
            pathType: ImplementationSpecific
            service:
              identifier: main
              port: http
    tls:
      - secretName: headscale.impl.nl
        hosts:
          - headscale.impl.nl

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: headscale-config
    globalMounts:
      - path: /etc/headscale

  config-headplane:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: headplane-config
    globalMounts:
      - path: /etc/headplane

  data:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: headscale-data
    advancedMounts:
      main:
        main:
          - path: /var/lib/headscale
