apiVersion: v1
kind: Namespace
metadata:
  name: headscale-client
  labels:
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale
  namespace: headscale-client
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale
  namespace: headscale-client
rules:
  - apiGroups: [""]
    resourceNames: ["tailscale-auth"]
    resources: ["secrets"]
    verbs: ["get", "update", "patch", "create"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "update", "patch", "create", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
  namespace: headscale-client
subjects:
  - kind: ServiceAccount
    name: tailscale
roleRef:
  kind: Role
  name: tailscale
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: headscale-client
  namespace: headscale-client
spec:
  serviceAccountName: tailscale
  containers:
    - name: tailscale
      image: ghcr.io/tailscale/tailscale:latest
      env:
        - name: TS_KUBE_SECRET
          value: tailscale-auth
        - name: TS_AUTHKEY
          value: 0bc2309450e85a5215c60d00946cd8aa4fd7ba5d49757497
        - name: TS_ROUTES
          value: "192.168.1.0/24"
        - name: TS_USERSPACE
          value: "true"
        - name: TS_EXTRA_ARGS
          value: "--login-server=http://headscale.headscale --accept-dns=false"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
