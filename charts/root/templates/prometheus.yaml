apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: prometheus
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 47.0.0
    helm:
      values: |
        alertmanager:
          enabled: false
        grafana:
          persistence:
            enabled: true
            finalizers:
              - kubernetes.io/pvc-protection
            existingClaim: prometheus-grafana
          nodeSelector:
            kubernetes.io/hostname: node3
          grafana.ini:
            analytics:
              check_for_updates: false
              reporting_enabled: false
            server:
              root_url: https://grafana.impl.nl
            auth:
              disable_login_form: true
            auth.generic_oauth:
              enabled: true
              allow_sign_up: false
              auto_login: true
              name: Auth0
              client_id: ksdkWYma0ijfC10amKanYD3YtD9weZ4N
              client_secret: 92m5WAuUzfrfWlGn4yWDMo7TPtAR65Ov4yDTre3uKzboRauDiDL_Z4KqjJmg39Th
              scopes: openid profile email offline_access name
              auth_url: https://dev-g4n3hjan0v2jg3le.eu.auth0.com/authorize
              token_url: https://dev-g4n3hjan0v2jg3le.eu.auth0.com/oauth/token
              api_url: https://dev-g4n3hjan0v2jg3le.eu.auth0.com/userinfo
              use_pkce: true
              signout_redirect_url: https://dev-g4n3hjan0v2jg3le.eu.auth0.com/logout
              skip_org_role_sync: true
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              external-dns.alpha.kubernetes.io/target: jasmine.odee.net
            labels: {}
            path: /
            pathType: Prefix
            extraPaths: []
            hosts:
              - grafana.impl.nl
        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            nodeSelector:
              kubernetes.io/hostname: node3
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-path
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 15Gi
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
        pod-security.kubernetes.io/audit: privileged
        pod-security.kubernetes.io/warn: privileged
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
