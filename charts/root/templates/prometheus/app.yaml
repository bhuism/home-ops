apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: prometheus
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 56.21.2
    helm:
      valuesObject:
        alertmanager:
          enabled: false
        grafana:
          adminPassword: killer
          defaultDashboardsEnabled: false
          grafana.ini:
            analytics:
              check_for_updates: false
              reporting_enabled: false
            users:
              home_page: /dashboards
            server:
              root_url: https://grafana.impl.nl
            security:
              disable_brute_force_login_protection: true
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              external-dns.alpha.kubernetes.io/target: ingress.impl.nl
              external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
              cert-manager.io/cluster-issuer: letsencrypt-production
              gethomepage.dev/enabled: "true"
            path: /
            pathType: Prefix
            extraPaths: []
            hosts:
              - grafana.impl.nl
            tls:
              - secretName: grafana.impl.nl
                hosts:
                  - grafana.impl.nl
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Home Assistant influx
                  type: influxdb
                  access: proxy
                  url: http://influx-influxdb.influx:8086
                  user: root
                  database: homeassistant
                  secureJsonData:
                    password: killer
                  editable: false
                - name: Dsmr Reader Measurements influxdb2
                  type: influxdb
                  access: proxy
                  url: http://influxdb2.influxdb2
                  jsonData:
                    version: Flux
                    organization: influxdata
                    defaultBucket: dsmrreader_measurements
                    tlsSkipVerify: true
                  secureJsonData:
                    token: jEFGuULYg3N5nQwYMq8hkda95lrcLhOH
                  editable: false

        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            storageSpec:
              volumeClaimTemplate:
                spec:
                  resources:
                    requests:
                      storage: 15Gi

        prometheus-node-exporter:
          prometheus:
            monitor:
              attachMetadata:
                node: true
              relabelings:
                - action: replace
                  sourceLabels:
                    - __meta_kubernetes_node_name
                  targetLabel: node

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
        pod-security.kubernetes.io/audit: privileged
        pod-security.kubernetes.io/warn: privileged
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
