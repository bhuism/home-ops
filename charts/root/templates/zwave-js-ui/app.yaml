apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zwave-js-ui
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: zwave-js-ui
  project: default
  source:
    chart: charts/zwave-js-ui
    repoURL: https://github.com/bhuism/publiccharts
    targetRevision: 0.2.88
    helm:
      valuesObject:

        nodeSelector:
          kubernetes.io/hostname: node6

        environment:
          - name: "SESSION_SECRET"
            value: "mysupersecretkey"
          - name: "TRUST_PROXY"
            value: "true"

        tolerations:
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: NoSchedule

        ingress:
          enabled: true
          className: "nginx"
          annotations:
            external-dns.alpha.kubernetes.io/target: ingress.impl.nl
            external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
            cert-manager.io/cluster-issuer: letsencrypt-production
            gethomepage.dev/enabled: "true"
          hosts:
            - host: zwave-js-ui.impl.nl
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls:
            - secretName: zwave-js-ui.impl.nl
              hosts:
                - zwave-js-ui.impl.nl

        serviceMonitor:
          enabled: true

        persistence:
          enabled: true
          existingClaim: zwave-js-ui-v1-pvc
          
        resources:
          limits:
            squat.ai/zwavemodule: 1

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
        pod-security.kubernetes.io/audit: privileged
        pod-security.kubernetes.io/warn: privileged
    syncOptions:
      - CreateNamespace=true
